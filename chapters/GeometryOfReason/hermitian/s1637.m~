# a=[1/3;1/3;1/3];
# b=[1/2;1/4;1/4];
# c=[2/5;2/5;1/5];
# D=[0,dkl(a,b),dkl(a,c);dkl(b,a),0,dkl(b,c);dkl(c,a),dkl(c,b),0]
D=[0,2,3;3,0,1;-1,2,0]
S=0.5*(D+D')
T=0.5*(D-D')
H=S+i.*T
[U,Ll] = eig(H)
# r1=[v(1,1);v(2,1);v(3,1)]
# r2=[v(1,2);v(2,2);v(3,2)]
# r3=[v(1,3);v(2,3);v(3,3)]
disp("Notice that H=U*L*U-conjugate transpose.");
disp("U(r):");
L=real(U)
disp("U(i):");
G=imag(U)
X=[
   L(1,1),L(1,2),L(1,3),G(1,1),G(1,2),G(1,3);
   L(2,1),L(2,2),L(2,3),G(2,1),G(2,2),G(2,3);
   L(3,1),L(3,2),L(3,3),G(3,1),G(3,2),G(3,3)]
OS=[
   Ll(1,1),Ll(1,2),Ll(1,3),0,0,0;
   Ll(2,1),Ll(2,2),Ll(2,3),0,0,0;
   Ll(3,1),Ll(3,2),Ll(3,3),0,0,0;
   0,0,0,Ll(1,1),Ll(1,2),Ll(1,3);
   0,0,0,Ll(2,1),Ll(2,2),Ll(2,3);
   0,0,0,Ll(3,1),Ll(3,2),Ll(3,3)]
OK=[
   0,0,0,-Ll(1,1),-Ll(1,2),-Ll(1,3);
   0,0,0,-Ll(2,1),-Ll(2,2),-Ll(2,3);
   0,0,0,-Ll(3,1),-Ll(3,2),-Ll(3,3);
   Ll(1,1),Ll(1,2),Ll(1,3),0,0,0;
   Ll(2,1),Ll(2,2),Ll(2,3),0,0,0;
   Ll(3,1),Ll(3,2),Ll(3,3),0,0,0]

A=[L(1,1)+i*G(1,1);L(1,2)+i*G(1,2);L(1,3)+i*G(1,3)];
B=[L(2,1)+i*G(2,1);L(2,2)+i*G(2,2);L(2,3)+i*G(2,3)];
C=[L(3,1)+i*G(3,1);L(3,2)+i*G(3,2);L(3,3)+i*G(3,3)];

aa1=(D(2,1)+D(1,2))/2
aa2=(D(3,1)+D(1,3))/2
aa3=(D(3,2)+D(2,3))/2
bb1=(D(2,1)-D(1,2))/(-2)
bb2=(D(3,1)-D(1,3))/(-2)
bb3=(D(3,2)-D(2,3))/(-2)

# coef1=(-1)*(((aa3^2)+(bb3^2))+(((aa1)+(i*bb1))^2)+(((aa2)-(i*bb2))^2))
# coef2=2*((aa1*aa2*aa3-aa1*bb2*bb3-bb1*aa2*bb3-bb1*bb2*aa3)-(i*(bb1*bb2*bb3-bb1*aa2*aa3-aa1*bb2*aa3-aa1*aa2*bb3)))
coef1=(((aa3^2)+(bb3^2))+((aa2^2)+(bb2^2))+((aa1^2)+(bb1^2)))
ap=aa1*((aa2*aa3)+(bb2*bb3))
app=bb1*((aa2*bb3)-(bb2*aa3))
# bpp=aa1*((bb2*aa3)-(aa2*bb3))
coef2=(2*ap)-(2*app)

# phiAB=A'*Ll*B
# phiAC=A'*Ll*C
# phiBC=B'*Ll*C
# phiBA=B'*Ll*A
# phiCA=C'*Ll*A
# phiCB=C'*Ll*B
# phiAA=A'*Ll*A
# phiBB=B'*Ll*B
# phiCC=C'*Ll*C

# The following refers to work done in Schmierbuch, page 1641ff
# disp("I am not sure why Chino needs X, OS, and OK.");
# disp("I appear to be finished when I have L.");
# disp("Now check if L is positive or negative definite, i.e. x'Lx>0 for all x.");
# disp(L);
# aa=D(1,2)+D(2,1)
# ba=D(1,2)-D(2,1)
# ab=D(1,3)+D(3,1)
# bb=D(1,3)-D(3,1)
# ac=D(2,3)+D(3,2)
# bc=D(2,3)-D(3,2)
# A=((-1)*((aa^2)+(ba^2)+(ab^2)+(bb^2)))+(ac^2)+(bc^2)
# xa=D(1,2)
# xb=D(1,3)
# xc=D(2,3)
# ya=D(2,1)
# yb=D(3,1)
# yc=D(3,2)
# B=(((xa*xb*xc)+(xa*xb*yc)+(ya*xb*xc)+(ya*yb*yc)+(xa*yb*yc)+(ya*xb*xc))+((-1)*((xa*yb*xc)+(ya*xb*yc))))+(i*(((xa*yb*xc)+(xa*yb*yc)+(xa*xb*xc)+(ya*yb*xc))+((-1)*((ya*xb*xc)+(ya*xb*yc)+(xa*xb*yc)+(ya*yb*yc)))))
# sol=roots([1,0,A,2*B])

# aa =  5
# ba = -1
# ab =  2
# bb =  4
# ac =  3
# bc = -1
# A = -36
# xa =  2
# xb =  3
# xc =  1
# ya =  3
# yb = -1
# yc =  2
# B =  10 - 36i
# sol =

#   -6.41705 + 0.82903i
#    5.98328 + 1.02343i
#    0.43378 - 1.85246i











